package com.example.android.stage_one;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.GridView;
import android.widget.Spinner;

import java.io.Serializable;
import java.util.ArrayList;


/**
 * A simple {@link Fragment} subclass.
 * Activities that contain this fragment must implement the
 * {@link MainFragment.OnFragmentInteractionListener} interface
 * to handle interaction events.
 * Use the {@link MainFragment#newInstance} factory method to
 * create an instance of this fragment.
 */
public class MainFragment extends Fragment
{
    // TODO: Rename parameter arguments, choose names that match
    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
    private static final String ARG_PARAM1 = "param1";
    private static final String ARG_PARAM2 = "param2";

    // TODO: Rename and change types of parameters
    private String mParam1;
    private String mParam2;


    GridView gridView;
    ArrayList<movie> test1;
    Activity activity;
    Context context1;
    boolean check=false;
    private Spinner spinner;

    private OnFragmentInteractionListener mListener;

    private MyMainInterface myListener;

void setListener(MyMainInterface lis)
{
    myListener=lis;
}


    public MainFragment() {
        // Required empty public constructor
    }

    /**
     * Use this factory method to create a new instance of
     * this fragment using the provided parameters.
     *
     * @param param1 Parameter 1.
     * @param param2 Parameter 2.
     * @return A new instance of fragment MainFragment.
     */
    // TODO: Rename and change types and number of parameters
    public static MainFragment newInstance(String param1, String param2)
    {
        MainFragment fragment = new MainFragment();
        Bundle args = new Bundle();
        args.putString(ARG_PARAM1, param1);
        args.putString(ARG_PARAM2, param2);
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        if (getArguments() != null) {
            mParam1 = getArguments().getString(ARG_PARAM1);
            mParam2 = getArguments().getString(ARG_PARAM2);
        }



    }

    @Override
    public void onResume() {
        super.onResume();
      //  Spinner();

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)
    {
        View rootView = inflater.inflate(R.layout.fragment_main, container, false);
        // Inflate the layout for this fragment
        new MyAsyncMain(0,context1,this).execute();

        return rootView;
    }


    @Override
    public void onActivityCreated(@Nullable Bundle savedInstanceState)
    {
        super.onActivityCreated(savedInstanceState);

        new MyAsyncMain(0,context1,this).execute();

        Spinner();

        gridView = (GridView) getView().findViewById(R.id.gridView);


        ArrayList<movie> test2=new ArrayList<movie>() ;



        gridView.setAdapter(new MyBaseAdapterMain(getActivity(), test2));    //pass new data to the adapter to show in grid view/
        gridView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> arg0, View arg1, int position, long arg3) {

                myListener.open_details(test1.get(position));

            }
        });


    }

    // TODO: Rename method, update argument and hook method into UI event
    public void onButtonPressed(Uri uri)
    {
        if (mListener != null) {
            mListener.onFragmentInteraction(uri);
        }
    }

    @Override
    public void onAttach(Context context)
    {
        super.onAttach(context);



    }

    @Override
    public void onDetach() {
        super.onDetach();
        mListener = null;
    }

    /**
     * This interface must be implemented by activities that contain this
     * fragment to allow an interaction in this fragment to be communicated
     * to the activity and potentially other fragments contained in that
     * activity.
     * <p/>
     * See the Android Training lesson <a href=
     * "http://developer.android.com/training/basics/fragments/communicating.html"
     * >Communicating with Other Fragments</a> for more information.
     */
    public interface OnFragmentInteractionListener {
        // TODO: Update argument type and name
        void onFragmentInteraction(Uri uri);
    }



    public void updateUi( ArrayList<movie> test)
    {
        //called by MyAsync_Main to send Array of movies to be set on adapter
        gridView.setAdapter(new MyBaseAdapterMain(getActivity(), test));    //pass new data to the adapter to show in grid view/
        test1=new ArrayList<>();
        test1.addAll(test); //test1 to detect user touch using listner above in main
    }


    public void Spinner()
    {
///////////////////////////////////////////SETTINGS(SPINNER)/////////////////////////////////////////////////////////////////
        //called in onCreate to be created first time
        //called on on Resume to be called each time MainActivity called
        ArrayList<String> aOptions = new ArrayList<String>();
        aOptions.add("Sort by popularity");
        aOptions.add("Sort by rate");
        aOptions.add("Favourites");


        ArrayAdapter<String> adapter = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_dropdown_item, aOptions);
        Spinner spinner = (Spinner) getView().findViewById(R.id.movie_spinner);
        spinner.setAdapter(adapter);


//Listner on Spinner
        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {

            @Override
            public void onItemSelected(AdapterView<?> parent, View view, int pos, long id) {
                String selectedItem = parent.getItemAtPosition(pos).toString();

                if (pos == 0)//popularity
                {
                    new MyAsyncMain(0,context1,MainFragment.this).execute();
                }
                else if (pos == 1)//rate
                {
                    new MyAsyncMain(1, context1, MainFragment.this).execute();
                }
                else //Favourites
                {
                    new MyAsyncMain(2,context1,MainFragment.this).execute();
                }
            }

            @Override
            public void onNothingSelected(AdapterView<?> arg0)
            {
                //
            }
        });



    }
}
